{"ast":null,"code":"var _jsxFileName = \"C:\\\\Development\\\\Personal\\\\React-IOC\\\\react-ioc\\\\src\\\\components\\\\ReactIOC\\\\ComponentLoader\\\\ComponentLoader.js\",\n    _s = $RefreshSig$();\n\nimport JsonPopulator from '../../../utils/JsonPopulator';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { reactIocActionNames } from '../../../redux/confiReducer/reactIocActions';\nimport { useEffect, useMemo, useRef } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction prepareComponents(components) {\n  const populatedComponents = { ...components\n  };\n\n  for (const compName in components) {\n    const Component = components[compName];\n\n    components[compName] = (comp, parentId, suffixId) => {\n      parentId = parentId ? parentId + \"/\" : \"\";\n      suffixId = suffixId ? suffixId : \"\";\n      const key = parentId + comp.id + suffixId;\n      return /*#__PURE__*/_jsxDEV(Component, {\n        id: key,\n        ...comp.props\n      }, key, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 14\n      }, this);\n    };\n  }\n\n  return components;\n}\n\nfunction populatePageStructure(pageStructure, data) {\n  return new JsonPopulator(data).populatePageStructure(pageStructure);\n}\n\nfunction ComponentLoader(props) {\n  _s();\n\n  const state = useSelector(state => state);\n  const dispatch = useDispatch();\n  prepareComponents(props.components);\n  const newState = useMemo(() => populatePageStructure(props.pageStructure, { ...props.components,\n    ...props.functions,\n    ...props.resources\n  }), [props.pageStructure]);\n  const pageStructure = useRef(props.pageStructure);\n  useEffect(() => {\n    dispatch({\n      type: reactIocActionNames.populateState,\n      newState: newState\n    });\n  }, [dispatch, newState]);\n  if (state === null) return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n  return pageStructure.render(pageStructure);\n}\n\n_s(ComponentLoader, \"SAzFNsKnipGyJ9e7lo9Lt2EeS2Q=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = ComponentLoader;\nexport default ComponentLoader;\n\nvar _c;\n\n$RefreshReg$(_c, \"ComponentLoader\");","map":{"version":3,"names":["JsonPopulator","useDispatch","useSelector","reactIocActionNames","useEffect","useMemo","useRef","prepareComponents","components","populatedComponents","compName","Component","comp","parentId","suffixId","key","id","props","populatePageStructure","pageStructure","data","ComponentLoader","state","dispatch","newState","functions","resources","type","populateState","render"],"sources":["C:/Development/Personal/React-IOC/react-ioc/src/components/ReactIOC/ComponentLoader/ComponentLoader.js"],"sourcesContent":["import JsonPopulator from '../../../utils/JsonPopulator';\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { reactIocActionNames } from '../../../redux/confiReducer/reactIocActions';\r\nimport { useEffect, useMemo, useRef } from 'react';\r\n\r\nfunction prepareComponents(components) {\r\n  const populatedComponents = {...components}\r\n  for (const compName in components) {\r\n    const Component = components[compName];\r\n    components[compName] = (comp, parentId, suffixId) => {\r\n      parentId = parentId ? parentId + \"/\" : \"\";\r\n      suffixId = suffixId ? suffixId : \"\";\r\n      const key = parentId + comp.id + suffixId;\r\n      return <Component key={key} id={key} {...comp.props} />;\r\n    }\r\n  }\r\n  return components;\r\n}\r\n\r\nfunction populatePageStructure(pageStructure, data) {\r\n  return new JsonPopulator(data).populatePageStructure(pageStructure);\r\n}\r\n\r\n\r\nfunction ComponentLoader(props) {\r\n  const state = useSelector((state) => state);\r\n  const dispatch = useDispatch();\r\n  prepareComponents(props.components);\r\n  const newState = useMemo(() => populatePageStructure(props.pageStructure, { ...props.components, ...props.functions, ...props.resources }), [props.pageStructure])\r\n  const pageStructure = useRef(props.pageStructure);\r\n  useEffect(\r\n    () => {\r\n      dispatch({\r\n        type: reactIocActionNames.populateState,\r\n        newState: newState\r\n      });\r\n    }, [dispatch, newState]\r\n  );\r\n  if (state === null) return <></>\r\n  return pageStructure.render(pageStructure);\r\n}\r\n\r\nexport default ComponentLoader;\r\n"],"mappings":";;;AAAA,OAAOA,aAAP,MAA0B,8BAA1B;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,mBAAT,QAAoC,6CAApC;AACA,SAASC,SAAT,EAAoBC,OAApB,EAA6BC,MAA7B,QAA2C,OAA3C;;;;AAEA,SAASC,iBAAT,CAA2BC,UAA3B,EAAuC;EACrC,MAAMC,mBAAmB,GAAG,EAAC,GAAGD;EAAJ,CAA5B;;EACA,KAAK,MAAME,QAAX,IAAuBF,UAAvB,EAAmC;IACjC,MAAMG,SAAS,GAAGH,UAAU,CAACE,QAAD,CAA5B;;IACAF,UAAU,CAACE,QAAD,CAAV,GAAuB,CAACE,IAAD,EAAOC,QAAP,EAAiBC,QAAjB,KAA8B;MACnDD,QAAQ,GAAGA,QAAQ,GAAGA,QAAQ,GAAG,GAAd,GAAoB,EAAvC;MACAC,QAAQ,GAAGA,QAAQ,GAAGA,QAAH,GAAc,EAAjC;MACA,MAAMC,GAAG,GAAGF,QAAQ,GAAGD,IAAI,CAACI,EAAhB,GAAqBF,QAAjC;MACA,oBAAO,QAAC,SAAD;QAAqB,EAAE,EAAEC,GAAzB;QAAA,GAAkCH,IAAI,CAACK;MAAvC,GAAgBF,GAAhB;QAAA;QAAA;QAAA;MAAA,QAAP;IACD,CALD;EAMD;;EACD,OAAOP,UAAP;AACD;;AAED,SAASU,qBAAT,CAA+BC,aAA/B,EAA8CC,IAA9C,EAAoD;EAClD,OAAO,IAAIpB,aAAJ,CAAkBoB,IAAlB,EAAwBF,qBAAxB,CAA8CC,aAA9C,CAAP;AACD;;AAGD,SAASE,eAAT,CAAyBJ,KAAzB,EAAgC;EAAA;;EAC9B,MAAMK,KAAK,GAAGpB,WAAW,CAAEoB,KAAD,IAAWA,KAAZ,CAAzB;EACA,MAAMC,QAAQ,GAAGtB,WAAW,EAA5B;EACAM,iBAAiB,CAACU,KAAK,CAACT,UAAP,CAAjB;EACA,MAAMgB,QAAQ,GAAGnB,OAAO,CAAC,MAAMa,qBAAqB,CAACD,KAAK,CAACE,aAAP,EAAsB,EAAE,GAAGF,KAAK,CAACT,UAAX;IAAuB,GAAGS,KAAK,CAACQ,SAAhC;IAA2C,GAAGR,KAAK,CAACS;EAApD,CAAtB,CAA5B,EAAoH,CAACT,KAAK,CAACE,aAAP,CAApH,CAAxB;EACA,MAAMA,aAAa,GAAGb,MAAM,CAACW,KAAK,CAACE,aAAP,CAA5B;EACAf,SAAS,CACP,MAAM;IACJmB,QAAQ,CAAC;MACPI,IAAI,EAAExB,mBAAmB,CAACyB,aADnB;MAEPJ,QAAQ,EAAEA;IAFH,CAAD,CAAR;EAID,CANM,EAMJ,CAACD,QAAD,EAAWC,QAAX,CANI,CAAT;EAQA,IAAIF,KAAK,KAAK,IAAd,EAAoB,oBAAO,qCAAP;EACpB,OAAOH,aAAa,CAACU,MAAd,CAAqBV,aAArB,CAAP;AACD;;GAhBQE,e;UACOnB,W,EACGD,W;;;KAFVoB,e;AAkBT,eAAeA,eAAf"},"metadata":{},"sourceType":"module"}