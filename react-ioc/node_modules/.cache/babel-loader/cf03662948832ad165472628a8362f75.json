{"ast":null,"code":"class JsonPopulator {\n  constructor(properties) {\n    this.properties = properties;\n  }\n\n  populatePageStructure(json) {\n    this.populateComponent(json);\n  }\n\n  populateComponent(json) {\n    if (!json.includes(\"reactComponent\")) throw \"Missing React Component\";\n    this.populateProp(json, \"reactComponent\");\n    const propsToPopulate = this.getPropsToPopulate(json);\n    if (json.includes(\"props\")) this.populateProps(json[\"props\"], propsToPopulate);\n  }\n\n  populateProps(props, propsToPopulate) {\n    for (const prop in props) {\n      if (propsToPopulate.includes(prop)) this.populateProp(props, prop);\n    }\n  }\n\n  populateProp(json, prop) {\n    const propValue = json[prop];\n    if (typeof propValue === \"object\") this.populatePropObject(propValue);else json[prop] = this.properties[json[prop]];\n  }\n\n  populatePropObject(propValue) {\n    if (Array.isArray(propValue)) this.loopJsonArray(propValue);else if (this.isComponent(propValue)) this.populateComponent(propValue);else this.loopJson(propValue);\n  }\n\n  loopJsonArray(jsonArray) {\n    jsonArray.forEach(prop => {\n      if (typeof prop === \"object\") this.populatePropObject(prop);\n    });\n  }\n\n  loopJson(json) {\n    for (const prop in json) {\n      if (typeof prop === \"object\") this.populatePropObject(prop);\n    }\n  }\n\n  static getPropsToPopulate(json) {\n    let propsToPopulate = json[\"propsToPopulate\"];\n    json[\"propsToPopulate\"] = [];\n    if (!propsToPopulate) propsToPopulate = [];\n    return propsToPopulate;\n  }\n\n  static isComponent(json) {\n    return json.includes(\"reactComponent\");\n  }\n\n}\n\nexport default JsonPopulator;","map":{"version":3,"names":["JsonPopulator","constructor","properties","populatePageStructure","json","populateComponent","includes","populateProp","propsToPopulate","getPropsToPopulate","populateProps","props","prop","propValue","populatePropObject","Array","isArray","loopJsonArray","isComponent","loopJson","jsonArray","forEach"],"sources":["C:/Development/Personal/React-IOC/react-ioc/src/utils/JsonPopulator.js"],"sourcesContent":["class JsonPopulator {\r\n\r\n  constructor(properties){\r\n    this.properties = properties;\r\n  }\r\n\r\n  populatePageStructure(json){\r\n    this.populateComponent(json);\r\n  }\r\n\r\n  populateComponent(json){\r\n    if(!json.includes(\"reactComponent\")) throw \"Missing React Component\";\r\n    this.populateProp(json,\"reactComponent\");\r\n    const propsToPopulate = this.getPropsToPopulate(json);\r\n    if(json.includes(\"props\")) this.populateProps(json[\"props\"],propsToPopulate)\r\n  }\r\n\r\n  populateProps(props,propsToPopulate){\r\n    for (const prop in props) {\r\n      if (propsToPopulate.includes(prop)) this.populateProp(props, prop);\r\n    }\r\n  }\r\n\r\n  populateProp(json, prop) {\r\n    const propValue = json[prop];\r\n    if (typeof propValue === \"object\") this.populatePropObject(propValue);\r\n    else json[prop] = this.properties[json[prop]];\r\n  }\r\n\r\n  populatePropObject(propValue){\r\n    if (Array.isArray(propValue)) this.loopJsonArray(propValue);\r\n    else if (this.isComponent(propValue)) this.populateComponent(propValue)\r\n    else this.loopJson(propValue);\r\n  }\r\n\r\n  loopJsonArray(jsonArray) {\r\n    jsonArray.forEach((prop) => {\r\n      if (typeof prop === \"object\")this.populatePropObject(prop);\r\n    });\r\n  }\r\n\r\n  loopJson(json) {\r\n    for (const prop in json) {\r\n      if (typeof prop === \"object\")this.populatePropObject(prop);\r\n    }\r\n  }\r\n\r\n  static getPropsToPopulate(json){\r\n    let propsToPopulate = json[\"propsToPopulate\"];\r\n    json[\"propsToPopulate\"] = [];\r\n    if(!propsToPopulate) propsToPopulate = [];\r\n    return propsToPopulate;\r\n  }\r\n\r\n  static isComponent(json){\r\n    return json.includes(\"reactComponent\");\r\n  }\r\n}\r\n\r\nexport default JsonPopulator;"],"mappings":"AAAA,MAAMA,aAAN,CAAoB;EAElBC,WAAW,CAACC,UAAD,EAAY;IACrB,KAAKA,UAAL,GAAkBA,UAAlB;EACD;;EAEDC,qBAAqB,CAACC,IAAD,EAAM;IACzB,KAAKC,iBAAL,CAAuBD,IAAvB;EACD;;EAEDC,iBAAiB,CAACD,IAAD,EAAM;IACrB,IAAG,CAACA,IAAI,CAACE,QAAL,CAAc,gBAAd,CAAJ,EAAqC,MAAM,yBAAN;IACrC,KAAKC,YAAL,CAAkBH,IAAlB,EAAuB,gBAAvB;IACA,MAAMI,eAAe,GAAG,KAAKC,kBAAL,CAAwBL,IAAxB,CAAxB;IACA,IAAGA,IAAI,CAACE,QAAL,CAAc,OAAd,CAAH,EAA2B,KAAKI,aAAL,CAAmBN,IAAI,CAAC,OAAD,CAAvB,EAAiCI,eAAjC;EAC5B;;EAEDE,aAAa,CAACC,KAAD,EAAOH,eAAP,EAAuB;IAClC,KAAK,MAAMI,IAAX,IAAmBD,KAAnB,EAA0B;MACxB,IAAIH,eAAe,CAACF,QAAhB,CAAyBM,IAAzB,CAAJ,EAAoC,KAAKL,YAAL,CAAkBI,KAAlB,EAAyBC,IAAzB;IACrC;EACF;;EAEDL,YAAY,CAACH,IAAD,EAAOQ,IAAP,EAAa;IACvB,MAAMC,SAAS,GAAGT,IAAI,CAACQ,IAAD,CAAtB;IACA,IAAI,OAAOC,SAAP,KAAqB,QAAzB,EAAmC,KAAKC,kBAAL,CAAwBD,SAAxB,EAAnC,KACKT,IAAI,CAACQ,IAAD,CAAJ,GAAa,KAAKV,UAAL,CAAgBE,IAAI,CAACQ,IAAD,CAApB,CAAb;EACN;;EAEDE,kBAAkB,CAACD,SAAD,EAAW;IAC3B,IAAIE,KAAK,CAACC,OAAN,CAAcH,SAAd,CAAJ,EAA8B,KAAKI,aAAL,CAAmBJ,SAAnB,EAA9B,KACK,IAAI,KAAKK,WAAL,CAAiBL,SAAjB,CAAJ,EAAiC,KAAKR,iBAAL,CAAuBQ,SAAvB,EAAjC,KACA,KAAKM,QAAL,CAAcN,SAAd;EACN;;EAEDI,aAAa,CAACG,SAAD,EAAY;IACvBA,SAAS,CAACC,OAAV,CAAmBT,IAAD,IAAU;MAC1B,IAAI,OAAOA,IAAP,KAAgB,QAApB,EAA6B,KAAKE,kBAAL,CAAwBF,IAAxB;IAC9B,CAFD;EAGD;;EAEDO,QAAQ,CAACf,IAAD,EAAO;IACb,KAAK,MAAMQ,IAAX,IAAmBR,IAAnB,EAAyB;MACvB,IAAI,OAAOQ,IAAP,KAAgB,QAApB,EAA6B,KAAKE,kBAAL,CAAwBF,IAAxB;IAC9B;EACF;;EAEwB,OAAlBH,kBAAkB,CAACL,IAAD,EAAM;IAC7B,IAAII,eAAe,GAAGJ,IAAI,CAAC,iBAAD,CAA1B;IACAA,IAAI,CAAC,iBAAD,CAAJ,GAA0B,EAA1B;IACA,IAAG,CAACI,eAAJ,EAAqBA,eAAe,GAAG,EAAlB;IACrB,OAAOA,eAAP;EACD;;EAEiB,OAAXU,WAAW,CAACd,IAAD,EAAM;IACtB,OAAOA,IAAI,CAACE,QAAL,CAAc,gBAAd,CAAP;EACD;;AAxDiB;;AA2DpB,eAAeN,aAAf"},"metadata":{},"sourceType":"module"}