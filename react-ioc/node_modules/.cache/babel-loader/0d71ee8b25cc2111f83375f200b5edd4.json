{"ast":null,"code":"var _jsxFileName = \"C:\\\\Development\\\\Personal\\\\React-IOC\\\\react-ioc\\\\src\\\\components\\\\ReactIOC\\\\PageLoader\\\\PageLoader.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nasync function getPageStructure() {\n  return await fetch(\"./pageStructure.json\", {\n    method: 'GET',\n    headers: {\n      'Content-Type': 'application/json',\n      Accept: \"application/json\"\n    }\n  }).then(response => {\n    return response.json();\n  });\n}\n\nfunction PageLoader() {\n  const pageStructure = getPageStructure();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: pageStructure[\"id\"]\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n}\n\n_c = PageLoader;\nexport default PageLoader;\n\nvar _c;\n\n$RefreshReg$(_c, \"PageLoader\");","map":{"version":3,"names":["getPageStructure","fetch","method","headers","Accept","then","response","json","PageLoader","pageStructure"],"sources":["C:/Development/Personal/React-IOC/react-ioc/src/components/ReactIOC/PageLoader/PageLoader.js"],"sourcesContent":["async function getPageStructure(){\r\n  return await fetch(\"./pageStructure.json\", {\r\n    method: 'GET',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n      Accept: \"application/json\"\r\n    }\r\n  }).then(response => {\r\n    return response.json();\r\n  });\r\n}\r\n\r\nfunction PageLoader() {\r\n  const pageStructure = getPageStructure();\r\n  return (\r\n    <div>{pageStructure[\"id\"]}</div>\r\n  );\r\n}\r\n\r\nexport default PageLoader;\r\n"],"mappings":";;;AAAA,eAAeA,gBAAf,GAAiC;EAC/B,OAAO,MAAMC,KAAK,CAAC,sBAAD,EAAyB;IACzCC,MAAM,EAAE,KADiC;IAEzCC,OAAO,EAAE;MACP,gBAAgB,kBADT;MAEPC,MAAM,EAAE;IAFD;EAFgC,CAAzB,CAAL,CAMVC,IANU,CAMLC,QAAQ,IAAI;IAClB,OAAOA,QAAQ,CAACC,IAAT,EAAP;EACD,CARY,CAAb;AASD;;AAED,SAASC,UAAT,GAAsB;EACpB,MAAMC,aAAa,GAAGT,gBAAgB,EAAtC;EACA,oBACE;IAAA,UAAMS,aAAa,CAAC,IAAD;EAAnB;IAAA;IAAA;IAAA;EAAA,QADF;AAGD;;KALQD,U;AAOT,eAAeA,UAAf"},"metadata":{},"sourceType":"module"}